インポートというのが、このプログラムで使うから事前に準備をしておくための記述で、
インポートしておいたクラスを実際に組み立てて使用するのがインスタンス化といいますよね。

インポートというのが、山札から手札にカードを食らえることになり
インスタンス化というのが、手札からフィールドゾーンへカードを召喚するということになりましたよね。

ちなみにインポートしている設計図の状態のものをクラスオブジェクトといいます。
そしてインスタンス化しているものをインスタンスオブジェクトといいます。

クラスobjectはインポートすることでそのクラスが存在するパス（場所）をメモリに格納する参照型となります。

そのほかにもクラスオブジェクトで管理されるのは、
static修飾子ありのフィールドとメソッドです。
逆にstatic修飾子なしのフィールドとメソッドはクラスオブジェクトではなく、インスタンスオブジェクトで管理されます。
どういうことかというと、
インスタンスオブジェクトのように個別のオブジェクトごとに内容が異なるものはstaticが付いていないので、インスタンスオブジェクトごとに
管理する必要がありますよね。

でも、staticがついている場合は、インスタンスオブジェクトごとではなくクラス単位で共通して使えるのです。

staticがついているものを静的メンバといいます。
つまり変更されることがないということですね。
インスタンス化後もコロコロ値が変わらないので、インスタンス後は変更する必要がないということですね。
static が付いた変数のことはクラス変数といいます
またメソッドのことはクラスメソッドといいまス。

でクラスメソッドとクラス変数は何ができるのかというと、インスタンスで管理されていないということは、
インスタンス化しなくても使用できるということです。

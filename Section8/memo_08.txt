代入のルール
代入する値と代入先の変数の方は必ず同じじゃないといけない

int型　long型　同じ数字でも左のように異なれば、コンパイルエラーとなる

単純に数字の１０を代入しているように見えても、
実際は１０という整数をいったんint型に変換して、１０という変数に置き換えて
その１０という変数を、別の変数に代入しているようなイメージである

整数をべた書きするとint型
整数の後ろにLを付けるとlong型になる
小数点だとdouble型に
小数の後ろにFが入ると　float型になる

代入時に自動変換して型が自動変換されることで代入できる場合もある

long型にint型を代入しようとするとint型が自動でlong型に変換されて
代入される
しかし、メモリサイズが小さくなる場合は代入できない
int型にlong型は自動変換で代入はできない
オーバーフローとなる（桁あふれともいう）
小は大を兼ねるが、大は小を兼ねない

算術演算子の時は
一番大きなデータ型に自動変換される
byte型＋short型＋int型　＝int型として処理される
↓↓
int + int + int となる
↑long型は混ざると
long + long + long + longとなる

doubleが混じればすべてdouble型となる

1 + 1.1 + 1 + 3
↓↓
1.0 + 1.1 + 1.0 + 3.0

文字列が混ざると全て文字列として扱われる


キャスト
一時的な型変換
long x = 10;
int y = (int)x;
こうするとlong型を一時的にint型として扱える
文字型へのキャストはできない

文字型を整数に変換する
String x ＝ 10;
int y = Integer.parseInt(x);

整数を文字に変換
int x = 10;
String y = String.valueOf(x);





